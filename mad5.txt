//js/start.js
if ('serviceWorker' in navigator) {
        	navigator.serviceWorker
        	.register("/sw.js")
        	.then((reg)=>console.log("registered",reg))
        	.catch((err)=>console.log("err",err));
} else {
        	console.log('No service worker support in this browser');
}

//manifest.json
{
    "name": "Program_8",
    "short_name": "Program_8",
    "start_url": "/myfirst.html",
    "display": "fullscreen",
    "background_color": "#ffff00",
    "description": "A simple applicationfor manifestation",
    "orientation": "portrait-primary",
    "theme_color":"#2196F3",
    "icons": [
        {
            "src": "/icons/icon-48x48.png",
            "sizes": "48x48",
            "type": "image/png"
        }
    ]
}

//myfirst.html
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="manifest" href="manifest.json">
        <title>program_8</title>
    </head>
    <body>
        <script src="/js/start.js"></script>
        Display of images:
        <p>Image 1 - > <img src="img/img1.jpg" width="100" height="100"></p>
        <p>Image 2 - > <img src="img/img2.jpg" width="100" height="100"></p>
        <p>Image 3 - > <img src="img/img3.jpg" width="100" height="100"></p>
    </body>
</html>

//sw.js
var mycache = "mycache";
var assets = [
    "/",
    "/myfirst.html",
    "/img/img1.jpg",
    "/img/img2.jpg",
    "/img/img3.jpg",
    "/js/start.js",
    "/sw.js",
    "/manifest.json" 
];

self.addEventListener('install', event => {
    console.log('inside the install', event);
    event.waitUntil(
        caches.open(mycache).then(cache => {
            return cache.addAll(assets);
        })
    );
});

self.addEventListener('activate', event => {
    console.log('inside the activate', event);
});

self.addEventListener('fetch', event => {
    event.respondWith(
        caches.match(event.request).then(response => {
            return response || fetch(event.request);
        })
    );
    console.log('inside the fetched', event);
});

